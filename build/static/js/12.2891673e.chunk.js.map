{"version":3,"sources":["pages/Register.js"],"names":["Wrapper","styled","div","Title","h1","layout","labelCol","span","wrapperCol","tailLayout","offset","validateUsername","rule","value","test","Promise","reject","length","resolve","validateConfirm","getFieldValue","validator","Component","AuthStore","useStore","history","useHistory","name","onFinish","values","console","log","setUsername","username","setPassword","password","register","then","push","catch","onFinishFailed","errorInfo","Item","label","rules","required","message","min","max","Password","type","htmlType"],"mappings":"4gBAMA,IAAMA,EAAUC,IAAOC,IAAV,KAOPC,EAAQF,IAAOG,GAAV,KAKLC,EAAS,CACXC,SAAU,CACNC,KAAM,GAEVC,WAAY,CACRD,KAAM,KAGRE,EAAa,CACfD,WAAY,CACRE,OAAQ,EACRH,KAAM,KAIRI,EAAmB,SAACC,EAAMC,GAC5B,MAAI,KAAKC,KAAKD,GAAeE,QAAQC,OAAO,gEACxCH,EAAMI,OAAS,GAAKJ,EAAMI,OAAS,GAAWF,QAAQC,OAAO,4CAC1DD,QAAQG,WAIbC,EAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,cAAH,MAAwB,CAC5CC,UAD4C,SAClCT,EAAMC,GACZ,OAAIO,EAAc,cAAgBP,EAAcE,QAAQG,UACjDH,QAAQC,OAAO,iDA+FfM,UA3FG,WAAO,IAEbC,EAAcC,cAAdD,UACFE,EAAUC,cAmBhB,OACI,kBAAC1B,EAAD,KACI,kBAACG,EAAD,qBACA,kBAAC,IAAD,iBACQE,EADR,CAEIsB,KAAK,QACLC,SAvBK,SAAAC,GACbC,QAAQC,IAAI,WAAYF,GACxBN,EAAUS,YAAYH,EAAOI,UAC7BV,EAAUW,YAAYL,EAAOM,UAC7BZ,EAAUa,WACLC,MAAK,WACFP,QAAQC,IAAI,sEACZN,EAAQa,KAAK,QACdC,OAAM,WACLT,QAAQC,IAAI,oEAeZS,eAXW,SAAAC,GACnBX,QAAQC,IAAI,UAAWU,MAYf,kBAAC,IAAKC,KAAN,CACIC,MAAM,qBACNhB,KAAK,WACLiB,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,yCAEb,CACIzB,UAAWV,KAInB,kBAAC,IAAD,OAGJ,kBAAC,IAAK+B,KAAN,CACIC,MAAM,eACNhB,KAAK,WACLiB,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,mCAEb,CACIC,IAAK,EACLD,QAAS,mCAEb,CACIE,IAAK,GACLF,QAAS,sCAIjB,kBAAC,IAAMG,SAAP,OAGJ,kBAAC,IAAKP,KAAN,CACIC,MAAM,2BACNhB,KAAK,kBACLiB,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,yCAEb3B,IAGJ,kBAAC,IAAM8B,SAAP,OAGJ,kBAAC,IAAKP,KAASjC,EACX,kBAAC,IAAD,CAAQyC,KAAK,UAAUC,SAAS,UAAhC","file":"static/js/12.2891673e.chunk.js","sourcesContent":["import { Button, Form, Input } from 'antd';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { useStore } from '../stores';\r\n\r\nconst Wrapper = styled.div`\r\n    max-width:600px;\r\n    margin:30px auto;\r\n    padding:20px;\r\n    border-radius:4px;\r\n    box-shadow: 2px 2px 4px 0 rgba(0,0,0,.2);\r\n`;\r\nconst Title = styled.h1`\r\n    text-align:center;\r\n    margin-bottom:30px;\r\n`;\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 6,\r\n    },\r\n    wrapperCol: {\r\n        span: 18,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 6,\r\n        span: 18,\r\n    },\r\n};\r\n// 验证用户名\r\nconst validateUsername = (rule, value) => {\r\n    if (/\\W/.test(value)) return Promise.reject('只能是数字字母下划线');\r\n    if (value.length < 4 || value.length > 10) return Promise.reject('长度为4-10个字符');\r\n    return Promise.resolve();\r\n}\r\n\r\n//验证再次确认密码\r\nconst validateConfirm = ({ getFieldValue }) => ({\r\n    validator(rule, value) {\r\n        if (getFieldValue('password') === value) return Promise.resolve();\r\n        return Promise.reject('两次密码不一致');\r\n    }\r\n\r\n});\r\nconst Component = () => {\r\n\r\n    const { AuthStore } = useStore();\r\n    const history = useHistory();\r\n\r\n    const onFinish = values => {\r\n        console.log('Success:', values);\r\n        AuthStore.setUsername(values.username);\r\n        AuthStore.setPassword(values.password);\r\n        AuthStore.register()\r\n            .then(() => {\r\n                console.log('注册成功！，跳转到首页');\r\n                history.push('/');\r\n            }).catch(() => {\r\n                console.log('登陆失败，啥也不做！');\r\n            });\r\n    };\r\n\r\n    const onFinishFailed = errorInfo => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Title>注册</Title>\r\n            <Form\r\n                {...layout}\r\n                name=\"basic\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Form.Item\r\n                    label=\"用户名\"\r\n                    name=\"username\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '请输入用户名!',\r\n                        },\r\n                        {\r\n                            validator: validateUsername\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"密码\"\r\n                    name=\"password\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '请输入密码!',\r\n                        },\r\n                        {\r\n                            min: 5,\r\n                            message: '最少5个字符'\r\n                        },\r\n                        {\r\n                            max: 10,\r\n                            message: '最大10个字符'\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Input.Password />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"确认密码\"\r\n                    name=\"confirmPassword\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '再次确认密码!',\r\n                        },\r\n                        validateConfirm\r\n                    ]}\r\n                >\r\n                    <Input.Password />\r\n                </Form.Item>\r\n\r\n                <Form.Item {...tailLayout}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        提交\r\n                </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </Wrapper>\r\n    );\r\n};\r\nexport default Component;"],"sourceRoot":""}